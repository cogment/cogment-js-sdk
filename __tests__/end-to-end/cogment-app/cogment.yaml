import:
  proto:
    - data.proto

commands:
  generate:python: |
    cogment generate --python_dir=./environment
    cogment generate --python_dir=./echo
    cogment generate --python_dir=./client
  generate:web-client: |
    cogment generate --js_dir=./webapp/src
    cd webapp
    npm run build:protos
  generate: |
    cogment run generate:python
    cogment run generate:web-client
  build: docker-compose build
  # Start and stop services
  start: docker-compose up orchestrator environment echo
  stop: docker-compose stop orchestrator environment echo
  client: docker-compose run --rm client

environment:
  config_type: cogment_app.EnvConfig

trial:
  config_type: cogment_app.TrialConfig

# Static configuration
actor_classes:
  - id: client
    action:
      space: cogment_app.ClientAction
    observation:
      space: cogment_app.Observation
  - id: echo
    action:
      space: cogment_app.EchoAction
    observation:
      space: cogment_app.Observation

# Dynamic configuration (could be changed by a pre-hook)
trial_params:
  environment:
    endpoint: grpc://environment:9000
    #config: {}
  actors:
    - name: client_actor
      actor_class: client
      endpoint: client
    - name: echo_echo_1
      actor_class: echo
      implementation: echo
      endpoint: grpc://echo:9000
