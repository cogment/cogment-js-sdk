version: '3.7'

services:
  grpc-cli:
    image: namely/grpc-cli:1.32_1

  cogment-cli:
    image: registry.gitlab.com/ai-r/cogment-cli:latest
    volumes:
      - ./:/cogment

  cogment-js-sdk:
    image: registry.gitlab.com/ai-r/cogment-js-sdk/cogment-js-sdk:latest
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - 4000:4000/tcp

  echo:
    image: registry.gitlab.com/ai-r/change_me/echo:latest
    build:
      context: ./__tests__/end-to-end/cogment-app/echo
      dockerfile: ../py_service.dockerfile
    volumes:
      - ./__tests__/end-to-end/cogment-app/:/app
    environment:
      COGMENT_GRPC_REFLECTION: 1
      PYTHONUNBUFFERED: 1
    x-cogment:
      ports:
        - port: 9000
    restart: on-failure

  environment:
    image: registry.gitlab.com/ai-r/change_me/environment:latest
    build:
      context: ./__tests__/end-to-end/cogment-app/environment
      dockerfile: ../py_service.dockerfile
    volumes:
      - ./__tests__/end-to-end/cogment-app/:/app
    environment:
      COGMENT_GRPC_REFLECTION: 1
      PYTHONUNBUFFERED: 1
    x-cogment:
      ports:
        - port: 9000
    restart: on-failure

  configurator:
    image: registry.gitlab.com/ai-r/change_me/configurator:latest
    build:
      context: ./__tests__/end-to-end/cogment-app/configurator
      dockerfile: ../py_service.dockerfile
    volumes:
      - ./__tests__/end-to-end/cogment-app/:/app
    environment:
      COGMENT_GRPC_REFLECTION: 1
      PYTHONUNBUFFERED: 1
    x-cogment:
      ports:
        - port: 9000
    restart: on-failure

  orchestrator:
    image: registry.gitlab.com/ai-r/change_me/orchestrator:latest
    build:
      context: ./__tests__/end-to-end/cogment-app/
      dockerfile: orchestrator/Dockerfile
    x-cogment:
      ports:
        - port: 9000
    depends_on:
      - environment
      - echo
      - configurator
    restart: on-failure

  grpcwebproxy:
    build:
      context: ./__tests__/end-to-end/cogment-app/grpcwebproxy
    depends_on:
      - orchestrator
    restart: on-failure

  sonarqube:
    image: sonarqube:developer
    stop_grace_period: 3600s
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
    volumes:
      - ./sonarqube/conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - postgres

  sonarqube-nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 9443:443
    volumes:
      - ./sonarqube-nginx/templates:/etc/nginx/templates
      - ./tls:/etc/nginx/tls
    depends_on:
      - sonarqube

  sonarqube-scan:
    image: sonarsource/sonar-scanner-cli:latest
    environment:
      SONAR_HOST_URL: http://sonarqube:9000
      SONAR_LOGIN: f11ae17e5c21e4e3df7d563c8c810b2c6f6cfd19
    volumes:
      - .:/usr/src
    depends_on:
      - sonarqube

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always

volumes:
  postgres:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_extensions:
    driver: local
