image: docker:20.10.0

default:
  tags:
    - ai-r
    - docker

stages:
  - test
  - build
  - release

variables:
  COMPOSE_PROJECT_NAME: ${CI_JOB_ID}

pre:install:
  stage: .pre
  image: node:14-alpine
  script:
    - npm install
  artifacts:
    expose_as: node_modules
    paths:
      - node_modules

test:
  stage: test
  before_script:
    - docker network prune -f
    - apk add docker-compose bash
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker-compose build cogment-js-sdk
    - docker-compose run cogment-js-sdk npm run build:protos
    - bin/up.bash
  script:
    - docker-compose run -e CODECOV_TOKEN=${CODECOV_TOKEN} cogment-js-sdk npm run test:ci
  after_script:
    - docker-compose logs --tail all > docker.log
    - bin/down.bash
  variables:
    NODE_ENV: test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    expose_as: reports
    paths:
      - coverage
      - allure-report
      - docker.log
    reports:
      junit: junit.xml

build:
  stage: build
  variables:
    NODE_ENV: production
  before_script:
    - apk add docker-compose
  script:
    - docker-compose run cogment-js-sdk npm run build
  artifacts:
    paths:
      - dist
      - public

pages:
  stage: release
  script:
    - cp -r allure-report public/allure
    - cp -r coverage public/coverage
  artifacts:
    paths:
      - public
  only:
    - main

#release:npm:prerelease:
#  stage: release
#  image: node:14-alpine
#  before_script:
#    - apk add git
#  script:
#    - npm run semantic-release
#  only:
#    - next

release:npm:
  stage: release
  image: node:14-alpine
  before_script:
    - apk add git
  script:
    - npm run semantic-release
  only:
    - main
