image: docker:20.10.0

default:
  tags:
    - ai-r
    - docker

stages:
  - test
  - build
  - release

variables:
  COMPOSE_PROJECT_NAME: ${CI_JOB_ID}

pre:install:
  stage: .pre
  image: node:14-alpine
  script:
    - npm install
  artifacts:
    paths:
      - node_modules

test:
  stage: test
  before_script:
    - apk add docker-compose bash
    - docker-compose build cogment-js-sdk
    - docker-compose run cogment-js-sdk npm run build:protos
    - bin/start-end-to-end.bash
  script:
    - docker-compose run -e CODECOV_TOKEN=${CODECOV_TOKEN} cogment-js-sdk npm run test:ci
  after_script:
    - bin/stop-end-to-end.bash
  variables:
    NODE_ENV: test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    paths:
      - coverage
    reports:
      junit: junit.xml

build:
  stage: build
  variables:
    NODE_ENV: production
  before_script:
    - apk add docker-compose
  script:
    - docker-compose run cogment-js-sdk npm run build
  artifacts:
    paths:
      - dist
      - public

pages:
  stage: release
  script:
    - cp -r coverage public/coverage
  artifacts:
    paths:
      - public
  only:
    - master

release:gitlab:
  stage: release
  script:
    - echo "Generating a gitlab release from the $CI_COMMIT_BRANCH branch."

release:npm:tag:
  stage: release
  script:
    - echo "This job releases something from the $CI_COMMIT_TAG tag."
  only:
    refs:
      - /^refs\/tags\/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

release:npm:beta:
  stage: release
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  only:
    - main

release:npm:
  stage: release
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  only:
    - master
