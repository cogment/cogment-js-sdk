include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml

image: docker:20.10.0

default:
  tags:
    - ai-r
    - docker

stages:
  - test
  - build
  - release
  - pages

variables:
  COMPOSE_PROJECT_NAME: ${CI_JOB_ID}

pre:install:
  stage: .pre
  image: node:14-alpine
  script:
    - npm install
    - cd cli && npm install
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules
      - cli/node_modules

test:
  stage: test
  variables:
    NODE_ENV: test
  before_script:
    - docker network prune -f
    - apk add docker-compose bash
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker-compose build cogment-js-sdk
    - docker-compose run cogment-js-sdk npm run build:protos
    - bin/up.bash
  script:
    - docker-compose run -e CODECOV_TOKEN=${CODECOV_TOKEN} -e NODE_ENV=test cogment-js-sdk npm run test:ci
  after_script:
    - docker-compose logs --no-color --tail all > docker.log
    - cat docker.log
    - bin/down.bash
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    expose_as: reports
    expire_in: 1 day
    paths:
      - src/cogment
      - coverage
      - allure-report
      - docker.log
    reports:
      junit: junit.xml
    when: always

build:
  stage: build
  before_script:
    - apk add docker-compose
  script:
    - docker-compose run -e NODE_ENV=production -e CI=true cogment-js-sdk npm run build
  artifacts:
    expire_in: 1 day
    paths:
      - dist
      - public

release:
  stage: release
  image: node:14-alpine
  variables:
    NODE_ENV: production
  before_script:
    - apk add git
  script:
    - npm run semantic-release
  only:
    - main
    - next
    - next-major
    - beta
    - alpha

pages:
  stage: pages
  variables:
    NODE_ENV: production
  before_script:
    - apk add docker-compose
  script:
    - docker-compose run -e NODE_ENV=production -e CI=true cogment-js-sdk npm run build:docs
    - cp -r allure-report public/allure
    - cp -r coverage public/coverage
    - cp -r docs/api/* public/
  artifacts:
    paths:
      - public
  only:
    - next
