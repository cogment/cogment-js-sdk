image: docker:20.10.3

variables:
  COMPOSE_PROJECT_NAME: ${CI_JOB_ID}

default:
  tags:
    - ai-r
    - docker

stages:
  - test
  - build
  - publish

.base_gh_ssh_agent:
  before_script:
    ## _Inspired by https://docs.gitlab.com/ee/ci/ssh_keys/_
    ##
    ## Install ssh-agent if not already installed.
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    ## Run ssh-agent
    - eval $(ssh-agent -s)
    ## Add the private key file to ssh-agent
    - echo "$GH_REPO_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    ## Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    ## Using the set $SSH_KNOWN_HOSTS to be able to verify remote servers public keys
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

pre:install:
  stage: .pre
  image: node:14
  script:
    - npm install -g npm@6
    - npm install
    - pushd __tests__/end-to-end/cogment-app/webapp && npm install && popd
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules
      - __tests__/end-to-end/cogment-app/webapp/node_modules

test:
  stage: test
  variables:
    NODE_ENV: test
    COMPOSE_FILE: docker-compose.yaml
  before_script:
    - apk add bash docker-compose
    - docker system prune -af --volumes
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker-compose build cogment-js-sdk
    - bin/up.bash
  script:
    - docker-compose run cogment-js-sdk
  after_script:
    - docker-compose logs --no-color --tail all > docker.log
    - mkdir -p dist
    - docker container cp $(docker-compose ps -a -q cogment-js-sdk):/app/dist ./
    - bin/down.bash
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    expose_as: reports
    expire_in: 1 day
    paths:
      - dist
      - docker.log
    when: always

dry_run_publish_tag_to_npm:
  image: node:14
  stage: build
  variables:
    NODE_ENV: production
  script:
    - npm publish --dry-run

publish_tag_to_npm:
  image: node:14
  stage: publish
  variables:
    NODE_ENV: production
  script:
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - npm publish
  only:
    - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+(?:-[[:alnum:]]+)?$/

publish_branch_to_github:
  image: node:14 # No node usage here but git is required (and part of this image)
  extends: .base_gh_ssh_agent
  stage: publish
  script:
    - git checkout ${CI_COMMIT_BRANCH} # Checkout the branch not the sha1
    - git remote add downstream git@github.com:cogment/cogment-js-sdk.git
    - git fetch downstream ${CI_COMMIT_BRANCH}
    - git push --tags downstream ${CI_COMMIT_BRANCH}:${CI_COMMIT_BRANCH}
  only:
    - main
